

#start time and end time columns
df['start time']=pd.to_datetime(df['Date Time'],errors='coerce')
# df['end time']=df['start time']+ datetime.timedelta(minutes=5)

#time only (no date)
df['start time']=df['start time'].dt.time
# df['end time']=df['end time'].dt.time

#subject column - combines country and event
df['subject']=df['Country/Region'] + ": " + df['Event']

#rows to remove..note the use of df2
df2=df[~df.subject.str.contains("Bloomberg",na=False)]
df2=df2[~df.subject.str.contains('Banking Groups',na=False)]
df2=df2[~df.subject.str.contains('Public Sector',na=False)]
df2=df2[~df.subject.str.contains('Machine Tool',na=False)]
df2=df2[~df.subject.str.contains('Bi-Weekly',na=False)]
df2=df2[~df.subject.str.contains('CBI',na=False)]
df2=df2[~df.subject.str.contains('Skilled Vacancies',na=False)]
df2=df2[~df.subject.str.contains('Westpac Leading',na=False)]
df2=df2[~df.subject.str.contains('OECD Economic Forecasts',na=False)]
df2=df2[~df.subject.str.contains('Durables Ex',na=False)]
df2=df2[~df.subject.str.contains('Ex Air',na=False)]
df2=df2[~df.subject.str.contains('Ex Fresh',na=False)]
df2=df2[~df.subject.str.contains('Ex Trans',na=False)]
df2=df2[~df.subject.str.contains('WDA',na=False)]
df2=df2[~df.subject.str.contains('Sight Deposits',na=False)]
df2=df2[~df.subject.str.contains('Investment QoQ',na=False)]
df2=df2[~df.subject.str.contains('Core-',na=False)]
df2=df2[~df.subject.str.contains('Supermarket',na=False)]
df2=df2[~df.subject.str.contains('Tokyo',na=False)]
df2=df2[~df.subject.str.contains('Watch Exports',na=False)]
df2=df2[~df.subject.str.contains('Foreigners Net',na=False)]
df2=df2[~df.subject.str.contains('Foreign Buying',na=False)]
df2=df2[~df.subject.str.contains('Buying Foreign',na=False)]
df2=df2[~df.subject.str.contains('Leading Index',na=False)]
df2=df2[~df.subject.str.contains('Money Supply',na=False)]
df2=df2[~df.subject.str.contains('Yr Inflation',na=False)]
df2=df2[~df.subject.str.contains('SA QoQ',na=False)]
df2=df2[~df.subject.str.contains('Domestic Demand',na=False)]
df2=df2[~df.subject.str.contains('Consumption QoQ',na=False)]
df2=df2[~df.subject.str.contains('CPI Core',na=False)]
df2=df2[~df.subject.str.contains('Dept Sales',na=False)]
df2=df2[~df.subject.str.contains('Price Paid',na=False)]
df2=df2[~df.subject.str.contains('New Orders',na=False)]
df2=df2[~df.subject.str.contains('ISM Employment',na=False)]
df2=df2[~df.subject.str.contains('Monetary Base',na=False)]
df2=df2[~df.subject.str.contains('Region Survey',na=False)]
df2=df2[~df.subject.str.contains('Production Value',na=False)]
df2=df2[~df.subject.str.contains('RBI Reverse',na=False)]
df2=df2[~df.subject.str.contains('Cash Reserve',na=False)]
df2=df2[~df.subject.str.contains('Continuing Claims',na=False)]
df2=df2[~df.subject.str.contains('Cash Earnings',na=False)]
df2=df2[~df.subject.str.contains('Productivity',na=False)]
df2=df2[~df.subject.str.contains('Selling Prices',na=False)]
df2=df2[~df.subject.str.contains('Underemployment',na=False)]
df2=df2[~df.subject.str.contains('Fix Cap',na=False)]
df2=df2[~df.subject.str.contains('Govt',na=False)]
df2=df2[~df.subject.str.contains('Commodity Index',na=False)]
df2=df2[~df.subject.str.contains('BRC Sales',na=False)]
df2=df2[~df.subject.str.contains('Net Exports',na=False)]
df2=df2[~df.subject.str.contains('CPI EU Harmonized',na=False)]
df2=df2[~df.subject.str.contains('Unit Labor Costs',na=False)]
df2=df2[~df.subject.str.contains('Factory Orders',na=False)]
df2=df2[~df.subject.str.contains('Household Change in Net Worth',na=False)]
df2=df2[~df.subject.str.contains('Gross Fix',na=False)]
df2=df2[~df.subject.str.contains('Household Cons',na=False)]
df2=df2[~df.subject.str.contains('Underlying',na=False)]
df2=df2[~df.subject.str.contains('Non EU',na=False)]
df2=df2[~df.subject.str.contains('M2',na=False)]
df2=df2[~df.subject.str.contains('M3',na=False)]
df2=df2[~df.subject.str.contains('Germany: ZEW',na=False)]
df2=df2[~df.subject.str.contains('Index QoQ',na=False)]
df2=df2[~df.subject.str.contains('PPI Ex',na=False)]
df2=df2[~df.subject.str.contains('3M/YoY',na=False)]
df2=df2[~df.subject.str.contains('Ex Food',na=False)]
df2=df2[~df.subject.str.contains('Import Price',na=False)]
df2=df2[~df.subject.str.contains('Export Price',na=False)]
df2=df2[~df.subject.str.contains('CPI Level',na=False)]
df2=df2[~df.subject.str.contains('Eco Watchers',na=False)]
df2=df2[~df.subject.str.contains('BSI',na=False)]
df2=df2[~df.subject.str.contains('Claimant',na=False)]
df2=df2[~df.subject.str.contains('Manpower',na=False)]
df2=df2[~df.subject.str.contains('Weekly Earnings',na=False)]
df2=df2[~df.subject.str.contains('CPI Index',na=False)]
df2=df2[~df.subject.str.contains('Tankan',na=False)]
df2=df2[~df.subject.str.contains('EU27',na=False)]
df2=df2[~df.subject.str.contains('Labour Costs',na=False)]
df2=df2[~df.subject.str.contains('Mich.',na=False)]
df2=df2[~df.subject.str.contains('Ex Autos and Gas',na=False)]
df2=df2[~df.subject.str.contains('(SIC)',na=False)]
df2=df2[~df.subject.str.contains('Eco Watchers',na=False)]
df2=df2[~df.subject.str.contains('Outright Bond',na=False)]
df2=df2[~df.subject.str.contains('Rate Trend',na=False)]
# df2=df2[~df.subject.str.contains('IFO Business Climate',na=False)]
df2=df2[~df.subject.str.contains('IFO Expectations',na=False)]
df2=df2[~df.subject.str.contains('PPI Output',na=False)]
df2=df2[~df.subject.str.contains('Wellbeing',na=False)]
df2=df2[~df.subject.str.contains('RPI Ex',na=False)]
df2=df2[~df.subject.str.contains('12 Mth',na=False)]
df2=df2[~df.subject.str.contains('Part',na=False)]
df2=df2[~df.subject.str.contains('Full',na=False)]
df2=df2[~df.subject.str.contains('FX Transactions',na=False)]
df2=df2[~df.subject.str.contains('GDP QoQ',na=False)]
df2=df2[~df.subject.str.contains('Mich. Current',na=False)]
df2=df2[~df.subject.str.contains('Mich. Expectations',na=False)]
df2=df2[~df.subject.str.contains('NSA',na=False)]
df2=df2[~df.subject.str.contains('12 Mth',na=False)]
df2=df2[~df.subject.str.contains('PSNCR',na=False)]
df2=df2[~df.subject.str.contains('Government NCR',na=False)]
df2=df2[~df.subject.str.contains('Deflator',na=False)]
df2=df2[~df.subject.str.contains('Mich. Expectations',na=False)]
df2=df2[~df.subject.str.contains('Personal Income',na=False)]
df2=df2[~df.subject.str.contains('Personal Spending',na=False)]
df2=df2[~df.subject.str.contains('GDP Price Index',na=False)]
df2=df2[~df.subject.str.contains('Retail Sales Ex Auto',na=False)]
df2=df2[~df.subject.str.contains('TIC Flows',na=False)]
# df2=df2[~df.subject.str.contains('CPI B',na=False)]
# df2=df2[~df.subject.str.contains('CPI R',na=False)]
# df2=df2[~df.subject.str.contains('CPI H',na=False)]
# df2=df2[~df.subject.str.contains('CPI No',na=False)]
df2=df2[~df.subject.str.contains('Daily',na=False)]
df2=df2[~df.subject.str.contains('Tourist',na=False)]
df2=df2[~df.subject.str.contains('LELIQ',na=False)]
df2=df2[~df.subject.str.contains('Registrations',na=False)]
df2=df2[~df.subject.str.contains('Weighted',na=False)]
df2=df2[~df.subject.str.contains('Mean QoQ',na=False)]
df2=df2[~df.subject.str.contains('Home Sales MoM',na=False)]
df2=df2[~df.subject.str.contains('NAB Business Confidence',na=False)]
df2=df2[~df.subject.str.contains('New Home Sales MoM',na=False)]
df2=df2[~df.subject.str.contains('Advance MoM',na=False)]
df2=df2[~df.subject.str.contains('Board Present',na=False)]
df2=df2[~df.subject.str.contains('Board Expectations',na=False)]
df2=df2[~df.subject.str.contains('Saxony',na=False)]
df2=df2[~df.subject.str.contains('M4',na=False)]
df2=df2[~df.subject.str.contains('Loans &',na=False)]
df2=df2[~df.subject.str.contains('Credit Indicator',na=False)]
df2=df2[~df.subject.str.contains('MLI',na=False)]
df2=df2[~df.subject.str.contains('Download',na=False)]
df2=df2[~df.subject.str.contains('Sec. on',na=False)]
df2=df2[~df.subject.str.contains('(YoY)',na=False)]
df2=df2[~df.subject.str.contains('PPI MoM',na=False)]
df2=df2[~df.subject.str.contains('Housing Starts MoM',na=False)]
df2=df2[~df.subject.str.contains('Building Permits MoM',na=False)]
df2=df2[~df.subject.str.contains('s NZD',na=False)]
df2=df2[~df.subject.str.contains('Raw Materials',na=False)]
df2=df2[~df.subject.str.contains('000',na=False)]
df2=df2[~df.subject.str.contains('Prices Paid',na=False)]
df2=df2[~df.subject.str.contains('Confidence s.a.',na=False)]
df2=df2[~df.subject.str.contains('Wholesale Trade Sales MoM',na=False)]
df2=df2[~df.subject.str.contains('Industrial MoM',na=False)]
df2=df2[~df.subject.str.contains('Revision',na=False)]
df2=df2[~df.subject.str.contains('Slovakia',na=False)]
df2=df2[~df.subject.str.contains('Confidence MoM',na=False)]
df2=df2[~df.subject.str.contains('W/ Auto Fuel',na=False)]
df2=df2[~df.subject.str.contains('Industrial Production',na=False)]

df2=df2.dropna(subset={'subject',})
df2.shape

dfs=df2[['Date Time','Day','C','subject','Surv(M)','Surv(A)','Surv(H)', 'Surv(L)','# Ests.','Std Dev','Category']]
dfs=dfs.rename(columns={'# Ests.':'estimates_submitted'})

# df.to_csv(file_name)
dfs.to_csv('www.csv', )


# writer = pd.ExcelWriter('output.xlsx')
# df2.to_excel(writer,'Sheet1')
# writer.save()

# pd.set_option('display.max_colwidth', -1)

cbs=dfs[dfs['subject'].str.contains('Rate')]
cbs = pd.concat([cbs, dfs[dfs['subject'].str.contains('Minutes')]])

cbs['datetime']=pd.to_datetime(cbs['Date Time'],errors='coerce')
cbs['day']=cbs['datetime'].dt.day
cbs['event_date']=cbs['subject']+' ('+cbs['Day'].astype(str)+')'

plt.rcParams.update({'font.size': 15})


data=cbs.dropna(subset=['datetime'])
dates=data['datetime']
names=data['event_date']

# Choose some nice levels
levels = np.tile([-5, 5, -3, 3, -1, 1],
                 int(np.ceil(len(dates)/6)))[:len(dates)]

# Create figure and plot a stem plot with the date
fig, ax = plt.subplots(figsize=(8.8, 4), constrained_layout=True)
ax.set(title="Central Bank Meetings and Minutes")

ax.vlines(dates, 0, levels, color="tab:red")  # The vertical stems.
ax.plot(dates, np.zeros_like(dates), "-o",
        color="k", markerfacecolor="w")  # Baseline and markers on it.

# annotate lines
for d, l, r in zip(dates, levels, names):
    ax.annotate(r, xy=(d, l),
                xytext=(-3, np.sign(l)*3), textcoords="offset points",
                horizontalalignment="right",
                verticalalignment="bottom" if l > 0 else "top")

# format xaxis with 4 month intervals
ax.xaxis.set_major_locator(mdates.MonthLocator(interval=4))
ax.xaxis.set_major_formatter(mdates.DateFormatter("%b %Y"))
plt.setp(ax.get_xticklabels(), rotation=30, ha="right")

# remove y axis and spines
ax.yaxis.set_visible(False)
ax.axis('off') #removes the frame around the chart

ax.margins(y=0.1)
fig = mpl.pyplot.gcf()
fig.set_size_inches(18,8)
plt.show()


